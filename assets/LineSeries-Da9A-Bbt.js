import{r as b}from"./index-CTzypqlY.js";import{l as W}from"./LineSeries-5eeGgUw4.js";import{k as q,d as w,G as V,g as x,b as P}from"./withSize-Bqu-aQP_.js";const u=class u extends b.Component{constructor(){super(...arguments),this.drawOnCanvas=o=>(e,a)=>{const{connectNulls:f,yAccessor:t,hoverStrokeWidth:n=u.defaultProps.hoverStrokeWidth,defined:i=u.defaultProps.defined,curve:c,canvasClip:s,strokeStyle:d,strokeWidth:p=u.defaultProps.strokeWidth}=this.props,{xAccessor:m,xScale:y,chartConfig:h,plotData:g,hovering:k}=a;if(!h){console.warn("LineSeries received no chartConfig, is it inside of a Chart?");return}const{yScale:v}=h;s!==void 0&&(e.save(),s(e,a)),e.lineWidth=k?n:p,d!==void 0&&(e.strokeStyle=d),o!==void 0&&e.setLineDash(o);const l=W().x(r=>Math.round(y(m(r)))).y(r=>Math.round(v(t(r))));c!==void 0&&l.curve(c),f||l.defined(r=>i(t(r))),e.beginPath(),l.context(e)(g),e.stroke(),s!==void 0&&e.restore()},this.isHover=o=>{const{highlightOnHover:e,yAccessor:a,hoverTolerance:f=u.defaultProps.hoverTolerance}=this.props;if(!e)return!1;const{chartConfig:{yScale:t,origin:n},xAccessor:i,mouseXY:c,currentItem:s,xScale:d,plotData:p}=o,[m,y]=c,h=f,{left:g,right:k}=q(p,d.invert(m),i);if(g===k){const v=t(a(s))+n[1],l=d(i(s))+n[0];return Math.pow(m-l,2)+Math.pow(y-v,2)<Math.pow(h,2)}else{const v=p[g],l=p[k],r=d(i(v))+n[0],D=t(a(v))+n[1],H=d(i(l))+n[0],S=(t(a(l))+n[1]-D)/(H-r),E=-1*S*r+D,M=Math.round(S*m+E);return y>=M-h&&y<=M+h}}}render(){const{highlightOnHover:o,onClick:e,onContextMenu:a,onDoubleClick:f,onHover:t,onUnHover:n,strokeDasharray:i}=this.props,c=o||t||n?{isHover:this.isHover,drawOn:["mousemove","pan"],canvasToDraw:x}:{drawOn:["pan"],canvasToDraw:P},s=w(i);return b.createElement(V,{canvasDraw:this.drawOnCanvas(s),onClickWhenHover:e,onDoubleClickWhenHover:f,onContextMenuWhenHover:a,onHover:t,onUnHover:n,...c})}};u.defaultProps={connectNulls:!1,defined:o=>o!==void 0&&!isNaN(o),hoverStrokeWidth:4,hoverTolerance:6,highlightOnHover:!1,strokeDasharray:"Solid",strokeStyle:"#2196f3",strokeWidth:1};let C=u;try{C.displayName="LineSeries",C.__docgenInfo={description:"`LineSeries` component.",displayName:"LineSeries",props:{canvasClip:{defaultValue:null,description:"",name:"canvasClip",required:!1,type:{name:"((context: CanvasRenderingContext2D, moreProps: any) => void) | undefined"}},connectNulls:{defaultValue:{value:"false"},description:"Wether to connect the line between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the line.",name:"curve",required:!1,type:{name:"CurveFactory | CurveFactoryLineOnly | undefined"}},defined:{defaultValue:{value:"(d: number | undefined) => d !== undefined && !isNaN(d)"},description:"Function to decide if a data point has been defined.",name:"defined",required:!1,type:{name:"((d: number | undefined) => boolean) | undefined"}},highlightOnHover:{defaultValue:{value:"false"},description:"Whether to highlight the line when within the `hoverTolerance`.",name:"highlightOnHover",required:!1,type:{name:"boolean | undefined"}},hoverStrokeWidth:{defaultValue:{value:"4"},description:"Width to increase the line to on hover.",name:"hoverStrokeWidth",required:!1,type:{name:"number | undefined"}},hoverTolerance:{defaultValue:{value:"6"},description:"The distance between the cursor and the closest point in the line.",name:"hoverTolerance",required:!1,type:{name:"number | undefined"}},onClick:{defaultValue:null,description:"Click handler.",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>, moreProps: any) => void) | undefined"}},onDoubleClick:{defaultValue:null,description:"Double click handler.",name:"onDoubleClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>, moreProps: any) => void) | undefined"}},onHover:{defaultValue:null,description:"Hover handler.",name:"onHover",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>, moreProps: any) => void) | undefined"}},onUnHover:{defaultValue:null,description:"Unhover handler.",name:"onUnHover",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>, moreProps: any) => void) | undefined"}},onContextMenu:{defaultValue:null,description:"Context menu handler.",name:"onContextMenu",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>, moreProps: any) => void) | undefined"}},strokeStyle:{defaultValue:{value:"#2196f3"},description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"string | undefined"}},strokeDasharray:{defaultValue:{value:"Solid"},description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"Solid"'},{value:'"ShortDash"'},{value:'"ShortDash2"'},{value:'"ShortDot"'},{value:'"ShortDashDot"'},{value:'"ShortDashDotDot"'},{value:'"Dot"'},{value:'"Dash"'},{value:'"LongDash"'},{value:'"DashDot"'},{value:'"LongDashDot"'},{value:'"LongDashDotDot"'}]}},strokeWidth:{defaultValue:{value:"1"},description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"number | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!0,type:{name:"(data: any) => number | undefined"}}}}}catch{}export{C as L};
