import{r as t}from"./index-CTzypqlY.js";import{A as b,a as g}from"./AreaSeries-DeBwQ8qS.js";import{S as I,a as x}from"./SVGComponent-CW3kryWw.js";import{w as E}from"./withOHLCData-BEr55ucm.js";import{w as P,m as V,n as M,o as T,X as $,Y as F}from"./withSize-Bqu-aQP_.js";import{d as B}from"./discontinuousTimeScaleProvider-DjLVsG-0.js";import"./AreaOnlySeries-C6tSr0xD.js";import"./array-2GBN5xbU.js";import"./LineSeries-5eeGgUw4.js";import"./LineSeries-Da9A-Bbt.js";import"./jsx-runtime-D_zvdyIk.js";let _=class c extends t.Component{constructor(){super(...arguments),this.clipPathId1=`alternating-area-clip-${String(Math.round(Math.random()*1e4*1e4))}`,this.clipPathId2=`alternating-area-clip-${String(Math.round(Math.random()*1e4*1e4))}`,this.baseAt=e=>e(this.props.baseAt),this.renderClip=e=>{const{chartConfig:s}=e;if(!s)return null;const{baseAt:r}=this.props,{yScale:a,width:o,height:n}=s;return t.createElement("defs",null,t.createElement("clipPath",{id:this.clipPathId1},t.createElement("rect",{x:0,y:0,width:o,height:a(r)})),t.createElement("clipPath",{id:this.clipPathId2},t.createElement("rect",{x:0,y:a(r),width:o,height:n-a(r)})))},this.bottomClip=(e,s)=>{const{chartConfig:r}=s;if(!r)return;const{baseAt:a}=this.props,{yScale:o,width:n,height:i}=r;e.beginPath(),e.rect(0,o(a),n,i-o(a)),e.clip()},this.topClip=(e,s)=>{const{chartConfig:r}=s;if(!r)return;const{baseAt:a}=this.props,{yScale:o,width:n}=r;e.beginPath(),e.rect(0,0,n,o(a)),e.clip()}}render(){const{connectNulls:e,yAccessor:s,curve:r,strokeStyle:a=c.defaultProps.strokeStyle,strokeWidth:o=c.defaultProps.strokeWidth,strokeDasharray:n=c.defaultProps.strokeDasharray,fillStyle:i=c.defaultProps.fillStyle}=this.props;return t.createElement("g",null,t.createElement(I,null,this.renderClip),t.createElement(b,{canvasClip:this.topClip,connectNulls:e,yAccessor:s,curve:r,baseAt:this.baseAt,fillStyle:i.top,strokeStyle:a.top,strokeDasharray:n.top,strokeWidth:o.top}),t.createElement(b,{canvasClip:this.bottomClip,connectNulls:e,yAccessor:s,curve:r,baseAt:this.baseAt,fillStyle:i.bottom,strokeStyle:a.bottom,strokeDasharray:n.bottom,strokeWidth:o.bottom}))}};_.defaultProps={connectNulls:!1,fillStyle:{top:"rgba(38, 166, 154, 0.1)",bottom:"rgba(239, 83, 80, 0.1)"},strokeStyle:{top:"#26a69a",bottom:"#ef5350"},strokeWidth:{top:2,bottom:2},strokeDasharray:{top:"Solid",bottom:"Solid"}};const d=class d extends t.Component{constructor(){super(...arguments),this.clipPathId1=`alternating-area-clip-${String(Math.round(Math.random()*1e4*1e4))}`,this.clipPathId2=`alternating-area-clip-${String(Math.round(Math.random()*1e4*1e4))}`,this.baseAt=e=>e(this.props.baseAt),this.renderClip=e=>{const{chartConfig:s}=e;if(!s)return null;const{baseAt:r}=this.props,{yScale:a,width:o,height:n}=s;return t.createElement("defs",null,t.createElement("clipPath",{id:this.clipPathId1},t.createElement("rect",{x:0,y:0,width:o,height:a(r)})),t.createElement("clipPath",{id:this.clipPathId2},t.createElement("rect",{x:0,y:a(r),width:o,height:n-a(r)})))},this.bottomClip=(e,s)=>{const{chartConfig:r}=s;if(!r)return;const{baseAt:a}=this.props,{yScale:o,width:n,height:i}=r;e.beginPath(),e.rect(0,o(a),n,i-o(a)),e.clip()},this.topClip=(e,s)=>{const{chartConfig:r}=s;if(!r)return;const{baseAt:a}=this.props,{yScale:o,width:n}=r;e.beginPath(),e.rect(0,0,n,o(a)),e.clip()}}render(){const{connectNulls:e,yAccessor:s,curve:r,strokeStyle:a=d.defaultProps.strokeStyle,strokeWidth:o=d.defaultProps.strokeWidth,strokeDasharray:n=d.defaultProps.strokeDasharray,fillStyle:i=d.defaultProps.fillStyle}=this.props;return t.createElement("g",null,t.createElement(x,null,this.renderClip),t.createElement(g,{canvasClip:this.topClip,connectNulls:e,yAccessor:s,curve:r,baseAt:this.baseAt,fillStyle:i.top,strokeStyle:a.top,strokeDasharray:n.top,strokeWidth:o.top}),t.createElement(g,{canvasClip:this.bottomClip,connectNulls:e,yAccessor:s,curve:r,baseAt:this.baseAt,fillStyle:i.bottom,strokeStyle:a.bottom,strokeDasharray:n.bottom,strokeWidth:o.bottom}))}};d.defaultProps={connectNulls:!1,fillStyle:{top:"rgba(38, 166, 154, 0.1)",bottom:"rgba(239, 83, 80, 0.1)"},strokeStyle:{top:"#26a69a",bottom:"#ef5350"},strokeWidth:{top:2,bottom:2},strokeDasharray:{top:"Solid",bottom:"Solid"}};let p=d;try{p.displayName="AlternatingFillAreaSeries",p.__docgenInfo={description:"`AlternatingFillAreaSeries` component is similar to a `AreaSeries` but with different colors above and below the base.",displayName:"AlternatingFillAreaSeries",props:{baseAt:{defaultValue:null,description:"",name:"baseAt",required:!0,type:{name:"number"}},connectNulls:{defaultValue:{value:"false"},description:"Wether to connect the area between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},fillStyle:{defaultValue:{value:`{
            top: "rgba(38, 166, 154, 0.1)",
            bottom: "rgba(239, 83, 80, 0.1)",
        }`},description:"Color, gradient, or pattern to use for fill.",name:"fillStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the area and line.",name:"curve",required:!1,type:{name:"CurveFactory | undefined"}},strokeStyle:{defaultValue:{value:`{
            top: "#26a69a",
            bottom: "#ef5350",
        }`},description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},strokeDasharray:{defaultValue:{value:`{
            top: "Solid" as strokeDashTypes,
            bottom: "Solid" as strokeDashTypes,
        }`},description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"{ top: strokeDashTypes; bottom: strokeDashTypes; } | undefined"}},strokeWidth:{defaultValue:{value:`{
            top: 2,
            bottom: 2,
        }`},description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"{ top: number; bottom: number; } | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!0,type:{name:"(data: any) => number | undefined"}}}}}catch{}class q extends t.Component{constructor(){super(...arguments),this.margin={left:0,right:40,top:0,bottom:24},this.xScaleProvider=B().inputDateAccessor(e=>e.date),this.yAccessor=e=>e.close,this.yExtents=e=>[e.high,e.low]}render(){const{data:e,height:s,ratio:r,width:a,...o}=this.props,{data:n,xScale:i,xAccessor:h,displayXAccessor:w}=this.xScaleProvider(e),N=h(n[n.length-1]),W=[h(n[Math.max(0,n.length-100)]),N];return t.createElement(M,{height:s,ratio:r,width:a,margin:this.margin,data:n,displayXAccessor:w,seriesName:"Data",xScale:i,xAccessor:h,xExtents:W},t.createElement(T,{id:1,yExtents:this.yExtents},t.createElement(_,{yAccessor:this.yAccessor,baseAt:56,...o}),t.createElement($,null),t.createElement(F,null)))}}const f=E()(P()(V()(q))),y=E("MINUTES")(P()(V()(q)));try{f.displayName="Daily",f.__docgenInfo={description:"",displayName:"Daily",props:{fillStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for fill.",name:"fillStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},baseAt:{defaultValue:null,description:"",name:"baseAt",required:!1,type:{name:"number | undefined"}},strokeStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!1,type:{name:"((data: any) => number | undefined) | undefined"}},connectNulls:{defaultValue:null,description:"Wether to connect the area between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the area and line.",name:"curve",required:!1,type:{name:"CurveFactory | undefined"}},strokeDasharray:{defaultValue:null,description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"{ top: strokeDashTypes; bottom: strokeDashTypes; } | undefined"}},strokeWidth:{defaultValue:null,description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"{ top: number; bottom: number; } | undefined"}}}}}catch{}try{componentDidMount.displayName="componentDidMount",componentDidMount.__docgenInfo={description:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",displayName:"componentDidMount",props:{}}}catch{}try{y.displayName="Intraday",y.__docgenInfo={description:"",displayName:"Intraday",props:{fillStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for fill.",name:"fillStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},baseAt:{defaultValue:null,description:"",name:"baseAt",required:!1,type:{name:"number | undefined"}},strokeStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"{ top: string; bottom: string; } | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!1,type:{name:"((data: any) => number | undefined) | undefined"}},connectNulls:{defaultValue:null,description:"Wether to connect the area between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the area and line.",name:"curve",required:!1,type:{name:"CurveFactory | undefined"}},strokeDasharray:{defaultValue:null,description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"{ top: strokeDashTypes; bottom: strokeDashTypes; } | undefined"}},strokeWidth:{defaultValue:null,description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"{ top: number; bottom: number; } | undefined"}}}}}catch{}const Z={component:p,title:"Visualization/Series/Baseline",args:{fillStyle:void 0,strokeStyle:void 0},argTypes:{baseAt:{control:"number"},fillStyle:{control:"object"},strokeStyle:{control:"object"}}},u={render:l=>t.createElement(f,{...l})},m={render:l=>t.createElement(y,{...l})};var S,k,A;u.parameters={...u.parameters,docs:{...(S=u.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: args => <Daily {...args} />
}`,...(A=(k=u.parameters)==null?void 0:k.docs)==null?void 0:A.source}}};var C,D,v;m.parameters={...m.parameters,docs:{...(C=m.parameters)==null?void 0:C.docs,source:{originalSource:`{
  render: args => <Intraday {...args} />
}`,...(v=(D=m.parameters)==null?void 0:D.docs)==null?void 0:v.source}}};const ee=["daily","intraday"];export{ee as __namedExportsOrder,u as daily,Z as default,m as intraday};
