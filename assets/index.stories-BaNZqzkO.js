import{r as e}from"./index-CTzypqlY.js";import{w as E}from"./withOHLCData-BEr55ucm.js";import{b as I,r as d}from"./baseIndicator-qdS_KWkb.js";import{a as T}from"./atr-C5J7OhYf.js";import{m as b}from"./merge-WqXt2Bz7.js";import{w as D,m as R,n as k,o as v,X as C,Y as M,a as L}from"./withSize-Bqu-aQP_.js";import{d as N}from"./discontinuousTimeScaleProvider-DjLVsG-0.js";import{L as z}from"./LineSeries-5eeGgUw4.js";import{S as P}from"./SingleValueTooltip-CQ4GxCuA.js";import"./index-kspPnZk0.js";import"./defaultOptionsForComputation-CN7nWbKN.js";import"./slidingWindow-Zblwndst.js";import"./functor-Bsi8uwFK.js";import"./path-uFnBsLuY.js";import"./jsx-runtime-D_zvdyIk.js";import"./array-2GBN5xbU.js";import"./ToolTipTSpanLabel-D8pipyNG.js";const l="ATR";function f(){const i=I().type(l),r=T(),n=b().algorithm(r).merge((a,t)=>{a.atr=t}),o=(a,t={merge:!0})=>{if(t.merge){if(!i.accessor())throw new Error(`Set an accessor to ${l} before calculating`);return n(a)}return r(a)};return d(o,i,"id","accessor","stroke","fill","echo","type"),d(o,r,"options"),d(o,n,"merge","skipUndefined"),o}class $ extends e.Component{constructor(){super(...arguments),this.margin={left:0,right:40,top:0,bottom:24},this.xScaleProvider=N().inputDateAccessor(r=>r.date)}render(){const{data:r,height:n,ratio:o,width:a}=this.props,t=f().options({windowSize:14}).merge((p,w)=>{p.atr14=w}).accessor(p=>p.atr14),A=t(r),{data:s,xScale:y,xAccessor:m,displayXAccessor:_}=this.xScaleProvider(A),x=m(s[s.length-1]),S=[m(s[Math.max(0,s.length-100)]),x];return e.createElement(k,{height:n,ratio:o,width:a,margin:this.margin,data:s,displayXAccessor:_,seriesName:"Data",xScale:y,xAccessor:m,xExtents:S},e.createElement(v,{id:1,yExtents:t.accessor()},e.createElement(C,{ticks:6}),e.createElement(M,{ticks:2}),e.createElement(z,{yAccessor:t.accessor(),strokeStyle:t.stroke()}),e.createElement(P,{yAccessor:t.accessor(),yLabel:`ATR (${t.options().windowSize})`,yDisplayFormat:L(".2f"),labelFill:t.stroke(),origin:[8,16]})))}}const O=E()(D()(R()($)));try{AtrIndicator.displayName="AtrIndicator",AtrIndicator.__docgenInfo={description:"",displayName:"AtrIndicator",props:{}}}catch{}try{componentDidMount.displayName="componentDidMount",componentDidMount.__docgenInfo={description:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",displayName:"componentDidMount",props:{}}}catch{}const ot={title:"Visualization/Indicator/ATR",component:f,parameters:{componentSubtitle:"Average True Range (ATR) is an indicator that measures volatility."}},c=()=>e.createElement(O,null);var g,u,h;c.parameters={...c.parameters,docs:{...(g=c.parameters)==null?void 0:g.docs,source:{originalSource:"() => <ATRIndicator />",...(h=(u=c.parameters)==null?void 0:u.docs)==null?void 0:h.source}}};const at=["basic"];export{at as __namedExportsOrder,c as basic,ot as default};
