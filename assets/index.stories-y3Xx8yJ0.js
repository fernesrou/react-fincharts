import{r as a}from"./index-CTzypqlY.js";import{A as V,a as q}from"./AreaSeries-DeBwQ8qS.js";import{w as y}from"./withOHLCData-BEr55ucm.js";import{w as h,m as v,n as w,o as E,X as N,Y as P}from"./withSize-Bqu-aQP_.js";import{d as I}from"./discontinuousTimeScaleProvider-DjLVsG-0.js";import"./AreaOnlySeries-C6tSr0xD.js";import"./array-2GBN5xbU.js";import"./LineSeries-5eeGgUw4.js";import"./LineSeries-Da9A-Bbt.js";import"./jsx-runtime-D_zvdyIk.js";class D extends a.Component{constructor(){super(...arguments),this.margin={left:0,right:40,top:24,bottom:24},this.xScaleProvider=I().inputDateAccessor(e=>e.date),this.yAccessor=e=>e.close,this.yExtents=e=>[e.high,e.low]}render(){const{data:e,height:g,ratio:S,width:C,...b}=this.props,{data:r,xScale:_,xAccessor:s,displayXAccessor:x}=this.xScaleProvider(e),A=s(r[r.length-1]),k=[s(r[Math.max(0,r.length-100)]),A];return a.createElement(w,{height:g,ratio:S,width:C,margin:this.margin,data:r,displayXAccessor:x,seriesName:"Data",xScale:_,xAccessor:s,xExtents:k},a.createElement(E,{id:1,yExtents:this.yExtents},a.createElement(V,{yAccessor:this.yAccessor,...b}),a.createElement(N,null),a.createElement(P,null)))}}const l=y()(h()(v()(D))),i=y("MINUTES")(h()(v()(D)));try{l.displayName="Daily",l.__docgenInfo={description:"",displayName:"Daily",props:{fillStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for fill.",name:"fillStyle",required:!1,type:{name:"string | ((context: CanvasRenderingContext2D, moreProps: any) => string | CanvasGradient | CanvasPattern) | undefined"}},baseAt:{defaultValue:null,description:"The base y value to draw the area to.",name:"baseAt",required:!1,type:{name:"number | ((yScale: ScaleContinuousNumeric<number, number, never>, d: [number, number], moreProps: any) => number) | undefined"}},strokeStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"string | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!1,type:{name:"((data: any) => number | undefined) | undefined"}},canvasClip:{defaultValue:null,description:"",name:"canvasClip",required:!1,type:{name:"((context: CanvasRenderingContext2D, moreProps: any) => void) | undefined"}},connectNulls:{defaultValue:null,description:"Whether to connect the area between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the area and line.",name:"curve",required:!1,type:{name:"CurveFactory | undefined"}},strokeDasharray:{defaultValue:null,description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"Solid"'},{value:'"ShortDash"'},{value:'"ShortDash2"'},{value:'"ShortDot"'},{value:'"ShortDashDot"'},{value:'"ShortDashDotDot"'},{value:'"Dot"'},{value:'"Dash"'},{value:'"LongDash"'},{value:'"DashDot"'},{value:'"LongDashDot"'},{value:'"LongDashDotDot"'}]}},strokeWidth:{defaultValue:null,description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"number | undefined"}}}}}catch{}try{componentDidMount.displayName="componentDidMount",componentDidMount.__docgenInfo={description:"Called immediately after a component is mounted. Setting state here will trigger re-rendering.",displayName:"componentDidMount",props:{}}}catch{}try{i.displayName="Intraday",i.__docgenInfo={description:"",displayName:"Intraday",props:{fillStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for fill.",name:"fillStyle",required:!1,type:{name:"string | ((context: CanvasRenderingContext2D, moreProps: any) => string | CanvasGradient | CanvasPattern) | undefined"}},baseAt:{defaultValue:null,description:"The base y value to draw the area to.",name:"baseAt",required:!1,type:{name:"number | ((yScale: ScaleContinuousNumeric<number, number, never>, d: [number, number], moreProps: any) => number) | undefined"}},strokeStyle:{defaultValue:null,description:"Color, gradient, or pattern to use for the stroke.",name:"strokeStyle",required:!1,type:{name:"string | undefined"}},yAccessor:{defaultValue:null,description:"Selector for data to plot.",name:"yAccessor",required:!1,type:{name:"((data: any) => number | undefined) | undefined"}},canvasClip:{defaultValue:null,description:"",name:"canvasClip",required:!1,type:{name:"((context: CanvasRenderingContext2D, moreProps: any) => void) | undefined"}},connectNulls:{defaultValue:null,description:"Whether to connect the area between undefined data points.",name:"connectNulls",required:!1,type:{name:"boolean | undefined"}},curve:{defaultValue:null,description:"A factory for a curve generator for the area and line.",name:"curve",required:!1,type:{name:"CurveFactory | undefined"}},strokeDasharray:{defaultValue:null,description:"Stroke dash.",name:"strokeDasharray",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"Solid"'},{value:'"ShortDash"'},{value:'"ShortDash2"'},{value:'"ShortDot"'},{value:'"ShortDashDot"'},{value:'"ShortDashDotDot"'},{value:'"Dot"'},{value:'"Dash"'},{value:'"LongDash"'},{value:'"DashDot"'},{value:'"LongDashDot"'},{value:'"LongDashDotDot"'}]}},strokeWidth:{defaultValue:null,description:"Stroke width.",name:"strokeWidth",required:!1,type:{name:"number | undefined"}}}}}catch{}const Y={title:"Visualization/Series/Area",component:q,argTypes:{fillStyle:{control:"color"},strokeStyle:{control:"color"}}},n={render:t=>a.createElement(l,{...t})},o={render:t=>a.createElement(i,{...t})};var d,u,c;n.parameters={...n.parameters,docs:{...(d=n.parameters)==null?void 0:d.docs,source:{originalSource:`{
  render: args => <Daily {...args} />
}`,...(c=(u=n.parameters)==null?void 0:u.docs)==null?void 0:c.source}}};var m,p,f;o.parameters={...o.parameters,docs:{...(m=o.parameters)==null?void 0:m.docs,source:{originalSource:`{
  render: args => <Intraday {...args} />
}`,...(f=(p=o.parameters)==null?void 0:p.docs)==null?void 0:f.source}}};const H=["daily","intraday"];export{H as __namedExportsOrder,n as daily,Y as default,o as intraday};
