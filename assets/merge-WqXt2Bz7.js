const s=r=>r;function c(r,i){let t;if(i===void 0)for(const n of r)n!=null&&(t>n||t===void 0&&n>=n)&&(t=n);else{let n=-1;for(let e of r)(e=i(e,++n,r))!=null&&(t>e||t===void 0&&e>=e)&&(t=e)}return t}function m(){let r=s;function i(){var n;const e=arguments.length;if(e===0)return[];const l=(n=c(arguments,t))!==null&&n!==void 0?n:0,u=new Array(l);for(let f=-1;++f<l;){for(let o=-1,d=u[f]=new Array(e);++o<e;)d[o]=arguments[o][f];u[f]=r.apply(this,u[f])}return u}function t(n){return n.length}return i.combine=function(n){return arguments.length?(r=n,i):r},i}function p(){let r=s,i=!0,t=()=>{};const n=e=>m().combine((u,f)=>{const o=i&&f===void 0?u:t(u,f);return o===void 0?u:o})(e,r(e));return n.algorithm=e=>e===void 0?r:(r=e,n),n.merge=e=>e===void 0?t:(t=e,n),n.skipUndefined=e=>e===void 0?i:(i=e,n),n}export{c as a,s as i,p as m,m as z};
